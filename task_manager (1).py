# -*- coding: utf-8 -*-
"""Task Manager.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BkQJ1reTInWVyzQVYEP-N56pIhbBmkzj
"""

!pip install --upgrade gspread
!pip install --upgrade gspread_dataframe

from google.colab import auth
auth.authenticate_user()

import gspread
from gspread_dataframe import get_as_dataframe, set_with_dataframe
from google.auth import default
import pandas as pd

creds, _ = default()
gc = gspread.authorize(creds)

sheet = gc.open("TaskManager")
ws = sheet.sheet1

def ensure_headers():
    expected = ["Task", "Due Date", "Status"]
    values = ws.get_all_values()
    if not values or values[0] != expected:
        ws.clear()
        ws.append_row(expected)
        print("Headers added.")

ensure_headers()

def add_task(task_name, due_date, status="Pending"):
    ensure_headers()
    df = get_as_dataframe(ws).dropna(how='all')
    new_task = pd.DataFrame([[task_name, due_date, status]], columns=["Task", "Due Date", "Status"])
    df = pd.concat([df, new_task], ignore_index=True)
    ws.clear()
    set_with_dataframe(ws, df)
    print(f" Task '{task_name}' added.")

add_task("Study Python", "2025-07-01", "Pending")
add_task("Finish Python Course", "2025-08-01", "Pending")

def show_tasks():
    ensure_headers()
    df = get_as_dataframe(ws).dropna(how='all')
    if df.empty:
        print(" No tasks yet.")
    else:
        print(" Current Tasks:")
        display(df)

show_tasks()

def update_status(task_name, new_status):
    ensure_headers()
    df = get_as_dataframe(ws).dropna(how='all')
    found = False
    for index, row in df.iterrows():
        if row["Task"] == task_name:
            df.at[index, "Status"] = new_status
            found = True
    if found:
        ws.clear()
        set_with_dataframe(ws, df)
        print(f" Task '{task_name}' updated to '{new_status}'.")
    else:
        print(f" Task '{task_name}' not found.")

update_status("Study Python", "Completed")

def main():
    add_task("Study Python", "2025-07-01", "Pending")
    add_task("Finish Python Course", "2025-08-01", "Pending")
    show_tasks()
    update_status("Study Python", "Completed")
    show_tasks()

main()